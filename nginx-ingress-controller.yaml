apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ingress-nginx
  name: ingress-nginx-controller
  labels:
    app: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-nginx
  template:
    metadata:
      labels:
        app: ingress-nginx
    spec:
      containers:
        - name: nginx-ingress-controller
          image: nginx/nginx-ingress:latest
          args:
            - /nginx-ingress-controller
            - --configmap=$(POD_NAMESPACE)/nginx-configuration
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
            - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
          ports:
            - containerPort: 80
              name: http  
            - containerPort: 443
              name: https  
          env:
            - name: Default 
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
---
apiVersion: v1
kind: Service
metadata:
  namespace: ingress-nginx
  name: ingress-nginx-controller
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
      name: http  
    - port: 443
      targetPort: 443
      name: https  
  selector:
    app: ingress-nginx
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: ingress-nginx-admission
webhooks:
  - name: validate.nginx.ingress.kubernetes.io
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["networking.k8s.io"]
        apiVersions: ["v1"]
        resources: ["ingresses"]
    clientConfig:
      service:
        name: ingress-nginx-controller
        namespace: ingress-nginx
        path: "/networking/v1/ingresses"
        port: 443
      caBundle: 
    admissionReviewVersions: ["v1"] 
    sideEffects: None  
